<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- public User findUserByNameAndPwd(String name,String pwd); public User 
	findUserByName(String name); public boolean insertUser(User user); public 
	boolean updateUser(User user); -->
<mapper namespace="xyz.zhhg.zblog.web.dao.ArticleDao">
	<resultMap type="xyz.zhhg.zblog.web.pojo.Article" id="articleResultMap">
		<id property="id" column="blog_article_id" />
		<result property="userId" column="user_id" />
		<result property="userName" column="user_name"/>
		<result property="title" column="blog_article_title" />
		<result property="createTime" javaType="java.util.Date"
			jdbcType="TIMESTAMP" column="blog_article_createtime" />
		<result property="modifiedDate" javaType="java.util.Date"
			jdbcType="TIMESTAMP" column="blog_article_modifieddate" />
		<result property="status" column="blog_article_status" />
		<result property="details" column="blog_article_details" />
		<result property="likes" column="blog_article_likes" />
		<result property="views" column="blog_article_views" />
		<result property="commentNum" column="blog_article_commentnum" />
		<result property="img" column="blog_article_img" />
		<collection property="classcifys" ofType="xyz.zhhg.zblog.web.pojo.Classcify"
			select="getArticleClasscify" column="aid=blog_article_id">
			<id column="id" property="id" />
			<result column="superior" property="superior" />
			<result column="name" property="name" />
		</collection>
	</resultMap>

	<resultMap type="xyz.zhhg.zblog.web.pojo.Classcify" id="classcify">
		<id column="id" property="id" />
		<result column="superior" property="superior" />
		<result column="name" property="name" />
	</resultMap>

	<insert id="insertArticle" parameterType="xyz.zhhg.zblog.web.pojo.Article">
		insert into
		article(
		user_id
		,blog_article_title
		,blog_article_status
		,blog_article_details
		,blog_article_modifieddate
		)
		value(
		#{userId}
		,#{title}
		,#{status}
		,#{details}
		,#{modifiedDate}
		);

	</insert>
	<!-- 为文章添加分类 -->
	<insert id="insertArticleClasscify" parameterType="xyz.zhhg.zblog.web.pojo.Article">
		insert into article_classcify(
		blog_article_id,type_id
		)
		values
		<foreach collection="classcifys" item="classcify" separator=",">
			(
			#{id},#{classcify.id}
			)
		</foreach>

	</insert>

	<!-- 批量删除文章通过文章id列表 ,列表为空则删除该作者的所有文章 -->
	<!-- <delete id="deleteArticleByIdList"> delete from article <where> user_id=#{uid} 
		<if test="idList!=null and idList.size!=0"> and blog_article_id in <foreach 
		collection="idList" item="id" open="(" close=")" separator=","> #{id} </foreach> 
		</if> </where> ; </delete> -->

	<update id="deleteArticleByIdList">
		update article set blog_article_status=1
		where user_id=#{uid}
		<choose>
			<when test="idList!=null and idList.size!=0">
				and blog_article_id in
				<foreach collection="idList" item="id" open="(" close=")"
					separator=",">
					#{id}
				</foreach>
			</when>
			<otherwise>
				and 1!=1
			</otherwise>

		</choose>
		;
	</update>

	<update id="updateArticle" parameterType="xyz.zhhg.zblog.web.pojo.Article">
		update article
		<set>
			<if test="status!=0">
				blog_article_status=#{status},
			</if>
			<if test="title!=null and title!=''">
				blog_article_title=#{title},
			</if>
			<if test="modifiedDate!=null">
				blog_article_modifieddate=#{modifiedDate},
			</if>
			<if test="details!=null">
				blog_article_details=#{details},
			</if>

		</set>
		where blog_article_id=#{id} and user_id=#{userId};
	</update>

	<update id="incViewNum">
		update article
		set
		blog_article_views=blog_article_views+1
		where blog_article_id=#{aid};
	</update>



	<select id="findLastIns" resultType="java.math.BigInteger">
		SELECT LAST_INSERT_ID();
	</select>

	<!-- 获取所有文章评论数列表 -->
	<sql id="selectComNum">
		(
		select
		COUNT(${articleId}) as ${num},
		${articleId}
		from
		${table}
		GROUP BY ${articleId}
		)as extratable
		on
		blog_article_id=extratable.${articleId}
	</sql>

	<!-- 文章概况 -->
	<sql id="articleOutline">
		a.blog_article_id as blog_article_id,
		a.user_id as user_id,
		u.user_name as user_name,
		blog_article_title,
		blog_article_createtime,
		blog_article_views,
		blog_article_details,
		blog_article_commentnum
	</sql>


	<!-- 获取文章概况列表 -->
	<select id="findArticle" parameterType="java.util.Map"
		resultMap="articleResultMap">
		select
		<include refid="articleOutline"></include>
		from
		user as u,article as a
		<if test="classcifyId!=null">
			,article_classcify as ac
		</if>
		LEFT JOIN
		<include refid="selectComNum">
			<property name="articleId" value="article_id" />
			<property name="num" value="blog_article_commentnum" />
			<property name="table" value="article_comment" />
		</include>
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			blog_article_status=#{status}
			and a.user_id=u.user_id
			<if test="id!=null">
				AND a.blog_article_id=#{id}
			</if>
			<if test="userId!=null and userId!=0">
				AND a.user_id=#{userId}
			</if>
			<if test="beginTime==null or endTime==null">
				<if test="createTime!=null">
					AND DATE_FORMAT(blog_article_createtime,"%Y-%m-%d") =
					DATE_FORMAT(#{createTime},"%Y-%m-%d")
				</if>
				<if test="modifiedDate!=null">
					AND DATE_FORMAT(blog_article_modifieddate,"%Y-%m-%d") =
					DATE_FORMAT(#{modifiedDate},"%Y-%m-%d")
				</if>
			</if>
			<if test="title!=null">
				AND blog_article_title like #{title}
			</if>
			<if test="classcifyId!=null">
				and a.blog_article_id=ac.blog_article_id
				and ac.type_id=#{classcifyId}
			</if>
		</trim>

		<trim prefix="ORDER BY" suffixOverrides="," suffix="DESC">
			<if test="commentNumOrder==true">
				blog_article_commentnum DESC,
			</if>
			<if test="viewsNumOrder">
				blog_article_views DESC,
			</if>
			<!-- <if test="likesNumOrder==true"> blog_article_likes DESC, </if> -->
			blog_article_createtime
		</trim>
		limit #{firstIndex},#{pageSize};
	</select>

	<!-- 根据分类查找文章 -->
	<!-- <select id="getArticlesByClasscify" resultMap="articleResultMap"> select 
		<include refid="articleOutline"></include> from article as a,article_classcify 
		as ac,classcify as c LEFT JOIN <include refid="selectComNum"> <property name="articleId" 
		value="article_id" /> <property name="num" value="blog_article_commentnum" 
		/> <property name="table" value="article_comment" /> </include> <where> a.blog_article_id=ac.blog_article_id 
		and ac.classify_id=c.type_id and ac.type_id=#{id} </where> </select> -->

	<!-- 获取满足指定条件的文章个数 -->
	<select id="selectCountArticle" parameterType="java.util.Map"
		resultType="int">
		select
		count(blog_article_id)
		from
		article
		<trim prefix="WHERE" prefixOverrides="AND |OR ">
			blog_article_status=#{status}
			<if test="id!=null">
				AND blog_article_id=#{id}
			</if>
			<if test="userId!=null and userId!=0">
				AND user_id=#{userId}
			</if>
			<if test="beginTime==null or endTime==null">
				<if test="createTime!=null">
					AND DATE_FORMAT(blog_article_createtime,"%Y-%m-%d") =
					DATE_FORMAT(#{createTime},"%Y-%m-%d")
				</if>
				<if test="modifiedDate!=null">
					AND DATE_FORMAT(blog_article_modifieddate,"%Y-%m-%d") =
					DATE_FORMAT(#{modifiedDate},"%Y-%m-%d")
				</if>
			</if>
			<if test="title!=null">
				AND blog_article_title like #{title}
			</if>
		</trim>
		;
	</select>

	<sql id="articleDetails">
		a.blog_article_id as blog_article_id,
		u.user_id as user_id,
		u.user_name as user_name,
		a.blog_article_title as blog_article_title,
		a.blog_article_createtime as blog_article_createtime,
		a.blog_article_views as blog_article_views,
		a.blog_article_details as blog_article_details
	</sql>
	<!-- 获取文章详情 -->
	<select id="getArticleDetailsByArticleId" resultMap="articleResultMap"
		parameterType="java.math.BigInteger">
		select <include refid="articleDetails"></include> 
		from article as a,user as u
		where
		a.blog_article_status = 0 and
		a.blog_article_id=#{id} and 
		a.user_id=u.user_id;
	</select>

	<sql id="articleClasscifyInfo">
		c.type_id as id,
		c.type_name as name,
		c.type_superior as
		superior

	</sql>
	<!-- 获取指定文章分类 -->
	<select id="getArticleClasscify" resultMap="classcify">
		select
		<include refid="articleClasscifyInfo"></include>
		from classcify as c,article_classcify as ac
		where
		ac.blog_article_id=#{aid} and ac.type_id=c.type_id
	</select>

	<select id="getPigeonholeDate" resultType="java.util.Date">
		SELECT
		DATE_FORMAT(blog_article_createtime,#{format}) as PigeonholeDate
		FROM
		article
		where blog_article_status = 0
		GROUP BY PigeonholeDate
		desc;
	</select>

</mapper>